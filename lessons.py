lessons = [
    {
        "title": "1. Знакомство с Python",
        "content": "Python — это язык программирования, который используется для создания программ, автоматизации задач и решения различных задач. Он простой и читаемый, подходит для начинающих."
    },
    {
        "title": "2. Среда программирования и работа в ней",
        "content": "Для работы с Python можно использовать IDLE, Thonny или Jupyter Notebook. Среда программирования позволяет писать, запускать и отлаживать код."
    },
    {
        "title": "3. Вывод данных. Команда print()",
        "content": "Команда print() используется для вывода текста и значений на экран. Пример: print('Привет, мир!')"
    },
    {
        "title": "4. Ввод данных. Команда input()",
        "content": "Команда input() позволяет пользователю ввести данные с клавиатуры. Пример: name = input('Введите имя: ')"
    },
    {
        "title": "5. Переменные и типы данных",
        "content": "В Python переменные хранят данные. Примеры типов: int — целое число, float — дробное, str — строка."
    },
    {
        "title": "6. Операции и выражения",
        "content": "Python поддерживает арифметические (+, -, *, /), логические (and, or) и операции сравнения (==, !=, >)."
    },
    {
        "title": "7. Условные конструкции if, else, elif",
        "content": "Позволяют выполнять разные действия в зависимости от условий. Пример: if a > 0: print('Положительное')"
    },
    {
        "title": "8. Циклы while, for",
        "content": "Циклы позволяют повторять действия. for используется для перебора, while — пока условие истинно."
    },
    {
        "title": "9. Списки и работа с ними",
        "content": "Списки — это упорядоченные коллекции. Пример: fruits = ['яблоко', 'банан']. Методы: append(), pop()."
    },
    {
        "title": "10. Функции",
        "content": "Функции — это блоки кода, которые можно переиспользовать. Пример: def greet(): print('Привет')"
    },
    {
        "title": "11. Алгоритмы обработки данных",
        "content": "Обработка данных может включать сортировку, фильтрацию, поиск в списках или таблицах."
    },
    {
        "title": "12. Работа с текстом и строками",
        "content": "Строки можно соединять, делить, заменять символы. Методы: upper(), split(), replace()."
    },
    {
        "title": "13. Работа с файлами",
        "content": "Открытие и чтение файлов осуществляется с помощью open(). Пример: with open('file.txt') as f: data = f.read()"
    },
    {
        "title": "14. Графика в Python (модуль turtle)",
        "content": "Модуль turtle позволяет рисовать с помощью кода. Пример: turtle.forward(100)"
    },
    {
        "title": "15. Создание и отладка программ",
        "content": "Отладка включает поиск и исправление ошибок. Важно использовать print() и тестировать код."
    },
    {
        "title": "16. Решение задач из реальной жизни (на Python)",
        "content": "Python позволяет решать задачи из математики, физики, экономики и других областей."
    },
    {
        "title": "17. Проектная деятельность: собственный проект на Python",
        "content": "Итоговая работа, где ученик создает программу по своему замыслу, применяя изученные знания."
    }
]
